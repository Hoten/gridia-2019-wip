/* Auto generated by build/build-protocol.js */

import Server from '../../server/server'

export default interface ICommands {
    onAdminSetFloor(server: Server, { floor, ...loc }: Protocol.Commands.AdminSetFloor["params"]): Protocol.Commands.AdminSetFloor["response"];
    onAdminSetItem(server: Server, { item, ...loc }: Protocol.Commands.AdminSetItem["params"]): Protocol.Commands.AdminSetItem["response"];
    onChat(server: Server, { to, message }: Protocol.Commands.Chat["params"]): Protocol.Commands.Chat["response"];
    onCloseContainer(server: Server, { containerId }: Protocol.Commands.CloseContainer["params"]): Protocol.Commands.CloseContainer["response"];
    onCreatureAction(server: Server, { creatureId, type }: Protocol.Commands.CreatureAction["params"]): Protocol.Commands.CreatureAction["response"];
    onDialogueResponse(server: Server, { choiceIndex }: Protocol.Commands.DialogueResponse["params"]): Protocol.Commands.DialogueResponse["response"];
    onLogin(server: Server, { name, password }: Protocol.Commands.Login["params"]): Protocol.Commands.Login["response"];
    onLogout(server: Server, {}: Protocol.Commands.Logout["params"]): Protocol.Commands.Logout["response"];
    onMove(server: Server, { ...loc }: Protocol.Commands.Move["params"]): Protocol.Commands.Move["response"];
    onMoveItem(server: Server, { from, quantity, to }: Protocol.Commands.MoveItem["params"]): Protocol.Commands.MoveItem["response"];
    onRegister(server: Server, { name, password }: Protocol.Commands.Register["params"]): Protocol.Commands.Register["response"];
    onRequestContainer(server: Server, { containerId, loc }: Protocol.Commands.RequestContainer["params"]): Protocol.Commands.RequestContainer["response"];
    onRequestCreature(server: Server, { id }: Protocol.Commands.RequestCreature["params"]): Protocol.Commands.RequestCreature["response"];
    onRequestPartition(server: Server, { w }: Protocol.Commands.RequestPartition["params"]): Protocol.Commands.RequestPartition["response"];
    onRequestSector(server: Server, { ...loc }: Protocol.Commands.RequestSector["params"]): Protocol.Commands.RequestSector["response"];
    onUse(server: Server, { toolIndex, location, usageIndex }: Protocol.Commands.Use["params"]): Protocol.Commands.Use["response"];
}